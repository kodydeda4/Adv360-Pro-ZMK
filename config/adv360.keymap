#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp LG(GRAVE)                &kp N1     &kp N2            &kp N3             &kp N4                &kp N5  &none                                                                            &mo 4      &kp N6  &kp N7                &kp N8            &kp N9                &kp N0          &kp BACKSPACE
&kp TAB                      &kp Q      &kp W             &kp E              &kp R                 &kp T   &none                                                                            &none      &kp Y   &kp U                 &lt 3 I           &kp O                 &kp APOSTROPHE  &none
&mt LS(LA(LC(LGUI))) ESCAPE  &kp A      &lt 2 S           &lt 2 D            &lt 2 F               &kp G   &none           &kp BACKSPACE  &none             &none          &none            &none      &kp H   &kp J                 &kp K             &kp L                 &kp P           &none
&kp LEFT_SHIFT               &kp Z      &kp X             &lt 1 C            &lt 1 V               &kp B                                  &none             &none                                      &kp N   &lt 1 M               &lt 1 COMMA       &kp DOT               &kp FSLH        &none
&kp LG(N)                    &kp TILDE  &kp LC(UP_ARROW)  &kp LC(LG(SPACE))  &kp LS(LA(LC(LGUI)))          &kp LEFT_SHIFT  &kp LGUI       &kp LEFT_ALT      &kp BACKSPACE  &mt LCTRL ENTER  &kp SPACE          &kp LS(LC(LA(LGUI)))  &kp LG(NUMBER_0)  &kp LG(LA(NUMBER_0))  &none           &none
            >;
        };

        symbols {
            bindings = <
&trans  &trans     &trans          &trans                &trans                 &trans    &trans                                      &trans  &trans        &trans             &trans            &trans             &trans         &trans
&trans  &kp GRAVE  &kp AT_SIGN     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp HASH  &trans                                      &trans  &kp PLUS      &kp EXCLAMATION    &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp MINUS      &trans
&trans  &kp CARET  &kp BACKSLASH   &kp PERIOD            &kp DOLLAR             &kp PIPE  &trans  &trans  &trans      &trans  &trans  &trans  &kp COLON     &kp EQUAL          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMICOLON  &trans
&trans  &kp TILDE  &kp UNDERSCORE  &kp AMPERSAND         &kp PERCENT            &none                     &trans      &trans                  &kp ASTERISK  &kp DOUBLE_QUOTES  &kp LESS_THAN     &kp GREATER_THAN   &kp SLASH      &trans
&trans  &trans     &trans          &trans                &trans                           &trans  &trans  &trans      &trans  &trans  &trans                &trans             &trans            &trans             &trans         &trans
            >;
        };

        numbers {
            bindings = <
&trans  &kp F1      &kp F2  &kp F3  &kp F4  &kp F5  &trans                                      &trans  &kp F6        &kp F7        &kp F8        &kp F9        &kp F10    &trans
&trans  &none       &none   &none   &none   &none   &trans                                      &trans  &kp PLUS      &kp NUMBER_7  &kp N8        &kp N9        &kp MINUS  &trans
&trans  &kp DOLLAR  &none   &none   &none   &none   &trans  &trans  &trans      &trans  &trans  &trans  &kp COLON     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0     &trans
&trans  &none       &none   &none   &none   &none                   &trans      &trans                  &kp ASTERISK  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH  &trans
&trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans                &trans        &trans        &trans        &trans     &trans
            >;
        };

        system {
            bindings = <
&trans  &kp F1  &kp F2          &kp F3        &kp F4        &kp F5  &trans                                      &trans  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &none   &kp C_BRI_DN    &kp UP_ARROW  &kp C_BRI_UP  &none   &trans                                      &trans  &none   &none   &none   &none   &none    &trans
&trans  &none   &kp LEFT_ARROW  &kp DOWN      &kp RIGHT     &none   &trans  &trans  &trans      &trans  &trans  &trans  &none   &none   &none   &none   &none    &trans
&trans  &none   &kp C_MUTE      &kp C_VOL_DN  &kp C_VOL_UP  &none                   &trans      &trans                  &none   &none   &none   &none   &none    &trans
&trans  &trans  &trans          &trans        &trans                &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans   &trans
            >;
        };

        mod {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                &none            &trans  &trans      &trans      &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans        &bootloader                                          &bootloader      &trans  &trans      &trans      &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans        &trans       &trans  &trans      &trans  &trans      &rgb_ug RGB_EFF  &trans  &trans      &trans      &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans                             &trans      &trans                               &trans  &trans      &trans      &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans                      &trans       &trans  &trans      &trans  &bl BL_TOG  &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC  &trans  &trans  &trans
            >;
        };
    };
};
